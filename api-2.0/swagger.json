{
  "swagger": "2.0",
  "info": {
    "description": "REST-API for connecting to Bitlumens Blockchain",
    "version": "1.0.0",
    "title": "Carbon Accounting",
    "contact": {
      "email": "sanket.raiturkar@snapperfuturetech.com"
    }
  },
  "host": "localhost:9000",
  "basePath": "/api/v1/bitlumenschannel",
  "tags": [
    {
      "name": "kyccontract",
      "description": "Functions related to the kyccontract chaincode"
    },
    {
      "name": "registerEnroll",
      "description": "Functions to register an org admin as well as multiple users"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/kyccontract/KycRecords": {
      "post": {
        "tags": ["kyccontract"],
        "summary": "Record kyc registrations for bitlumens",
        "description": "",
        "operationId": "KycRecords",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Kyc object to store to the blockchain",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KycRecords"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success. Data recorded"
          },
          "400": {
            "description": "Error"
          },
          "409": {
            "description": "Conflict with data content"
          },
          "412": {
            "description": "Invalid input parameters"
          }
        }
      }
    },
    "/kyccontract/GetRecordsById/{userId}/{orgName}/{uuid}": {
      "get": {
        "tags": ["kyccontract"],
        "summary": "Get kyc data ",
        "description": "Get data of kyc by ID of party, from and thru data",
        "operationId": "GetRecordsById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of User",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgName",
            "in": "path",
            "description": "Org that registered user",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of emission record",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/KycData"
            }
          },
          "400": {
            "description": "Error"
          },
          "409": {
            "description": "Conflict with data content"
          },
          "412": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/kyccontract/getAllEmissionsData/{userId}/{orgName}/{utilityId}/{partyId}": {
      "get": {
        "tags": ["emissionscontract"],
        "summary": "Get all emissions data from the past year of utility",
        "description": "Get all emissions data of utility by ID of utility and party",
        "operationId": "getAllEmissionsData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of User",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgName",
            "in": "path",
            "description": "Org that registered user",
            "required": true,
            "type": "string"
          },
          {
            "name": "utilityId",
            "in": "path",
            "description": "ID of Utiltiy",
            "required": true,
            "type": "string"
          },
          {
            "name": "partyId",
            "in": "path",
            "description": "ID of party",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/allEmissionsData"
            }
          },
          "400": {
            "description": "Error"
          },
          "409": {
            "description": "Conflict with data content"
          },
          "412": {
            "description": "Invalid input data"
          }
        }
      }
    },
    "/registerEnroll/admin": {
      "post": {
        "tags": ["registerEnroll"],
        "summary": "Registers an org admin",
        "description": "Only call this function once per org. Three organizations are currently implemented. auditor1, auditor2, and auditor3.",
        "operationId": "registerOrgAdmin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Org admin object to register org admin of ca",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterOrgAdmin"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success. Admin registered"
          },
          "400": {
            "description": "Error"
          },
          "409": {
            "description": "Conflict with data content"
          },
          "412": {
            "description": "Invalid input parameters"
          }
        }
      }
    },
    "/registerEnroll/user": {
      "post": {
        "tags": ["registerEnroll"],
        "summary": "Registers a user.",
        "description": "Registers a user by orgName, userId and affiliation",
        "operationId": "registerUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object to register",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success. User registered"
          },
          "400": {
            "description": "Error"
          },
          "409": {
            "description": "Conflict with data content"
          },
          "412": {
            "description": "Invalid input parameters"
          }
        }
      }
    }
  },
  "definitions": {
    "RecordEmissions": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "orgName": {
          "type": "string"
        },
        "utilityId": {
          "type": "string"
        },
        "partyId": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "thruDate": {
          "type": "string"
        },
        "energyUseAmount": {
          "type": "integer",
          "format": "int32"
        },
        "energyUseUom": {
          "type": "string"
        }
      }
    },
    "EmissionsData": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "orgName": {
          "type": "string"
        },
        "utilityId": {
          "type": "string"
        },
        "partyId": {
          "type": "string"
        },
        "fromDate": {
          "type": "string"
        },
        "thruDate": {
          "type": "string"
        },
        "emissionsAmount": {
          "type": "integer",
          "format": "int32"
        },
        "emissionsUom": {
          "type": "string"
        },
        "renewableEnergyUseAmount": {
          "type": "number"
        },
        "nonrenewableEnergyUseAmount": {
          "type": "number"
        },
        "energyUseUom": {
          "type": "number"
        },
        "factorSource": {
          "type": "string"
        }
      }
    },
    "allEmissionsData": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "orgName": {
            "type": "string"
          },
          "utilityId": {
            "type": "string"
          },
          "partyId": {
            "type": "string"
          },
          "fromDate": {
            "type": "string"
          },
          "thruDate": {
            "type": "string"
          },
          "emissionsAmount": {
            "type": "integer",
            "format": "int32"
          },
          "emissionsUom": {
            "type": "string"
          },
          "renewableEnergyUseAmount": {
            "type": "number"
          },
          "nonrenewableEnergyUseAmount": {
            "type": "number"
          },
          "energyUseUom": {
            "type": "number"
          },
          "factorSource": {
            "type": "string"
          }
        }
      }
    },
    "RegisterOrgAdmin": {
      "type": "object",
      "properties": {
        "orgName": {
          "type": "string"
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "orgName": {
          "type": "string"
        },
        "affiliation": {
          "type": "string"
        }
      }
    }
  }
}
